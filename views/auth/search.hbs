<div class="box">
  <h1 class="title">Mapa</h1>
  <p class="subtitle">Selecciona un marcador para ver más información</p>
</div>



<meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
<script src='https://api.mapbox.com/mapbox-gl-js/v0.53.0/mapbox-gl.js'></script>
<link href='https://api.mapbox.com/mapbox-gl-js/v0.53.0/mapbox-gl.css' rel='stylesheet' />


<style>
  .box {
    position: absolute;
    z-index: 99999;
    max-width: 300px;
        box-shadow: 0px 1px 6px 0px rgba(50, 50, 50, 0.2);
    transition: all 0.4s ease-in-out;
    padding: .8rem;
    background: white;
    border-radius: 10px;
    margin: 1.5rem;
    transition: all .2s ease-in-out
  }

  .box:hover {
    box-shadow: 0px 1px 6px 0px rgba(50, 50, 50, 0.2);
    transform: translateY(-4px)
  }

  body {
    margin: 0;
    padding: 0;
  }

  #mapSearch {
    position: absolute;
    top: 40px;
    bottom: 0;
    width: 100%;
    height: 70%;
  }
.mapboxgl-ctrl-geocoder{
  float:left;
}
.mapboxgl-ctrl{
  float: left
}
</style>

<script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v3.1.0/mapbox-gl-geocoder.min.js'></script>
<link rel='stylesheet'
  href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v3.1.0/mapbox-gl-geocoder.css' type='text/css' />
<div id='mapSearch'></div>
<style>
  #geocoder-container>div {
    min-width: 50%;
    margin-left: 2%;
  }
</style>

<script>
  var promise = new Promise(function (resolve, reject) {
    navigator.geolocation.getCurrentPosition(function (position) {
      console.log('obtenidas posiciones', position.coords.latitude)
      resolve(pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      })
    })
  });

  promise.then(currentCoords => {
    console.log(currentCoords)
    mapboxgl.accessToken = '{{token}}';
    var map = new mapboxgl.Map({
      container: 'mapSearch',
      style: 'mapbox://styles/mapbox/streets-v11',
      center: [-3.70275, 40.4183083],
      zoom: 6
    });

    map.addControl(new mapboxgl.GeolocateControl({
      positionOptions: {
        enableHighAccuracy: true
      },
      trackUserLocation: true
    }));

    axios.get("{{key}}/auth/search/bands")
      .then(response => {
        console.log(response)

        response.data.usersArray.forEach((place, index) => {
        if (place.place === undefined)  return
        console.log(place)

          let newMarker = new mapboxgl.Marker()
          /*console.log(place.id)*/
            .setLngLat(place.place)
            .setPopup(new mapboxgl.Popup({ offset: 25 }) // add popups
            .setHTML(`<p>${place.username} <a href='{{key}}/auth/search/band-info/${place._id}'>hola</a></p>`))
            .addTo(map);

          let userPlaces = {
            type: "FeatureCollection",
            features: [
              {
                "type": "Feature",
                "geometry": {
                  "type": "Point",
                  "coordinates": [
                    place.place.lat,
                    place.place.lng
                  ]
                }
              }]
          };

        })


    /*
    map.on('load', function () {
      map.addSource('single-point', {
        "type": "geojson",
        "data": {
          "type": "FeatureCollection",
          "features": []
        }
      });

      map.addLayer({
        "id": "point",
        "source": "single-point",
        "type": "circle",
        "paint": {
          "circle-radius": 10,
          "circle-color": "#007cbf"
        }
      });

      geocoder.on('result', function (ev) {
        map.getSource('single-point').setData(ev.result.geometry);
      });
    });
    */
    map.addControl(new mapboxgl.NavigationControl());


    /*
    var geojson = {
      type: 'FeatureCollection',
      features: [{
        type: 'Feature',
        geometry: {
          type: 'Point',
          coordinates: [currentCoords.lng, currentCoords.lat]
        },
      },
      ]
    }
    new mapboxgl.Marker()
      .setLngLat(geojson.features[0].geometry.coordinates)
      .addTo(map);
    

    axios.get("http://localhost:3000/auth/search/bands")

      .then(response => {
        console.log('------', response.data)

        response.data.usersArray.forEach((place, index) => {
          if (place.place !== undefined) {
            let newMarker = new mapboxgl.Marker()
              .setLngLat(place.place)
              .setPopup(new mapboxgl.Popup({ offset: 25 }) // add popups
                .setHTML(`<p>${place.username}</p><br><p>${place.style}</p><br><p>${place.price}</p><br><p><a href=""</p>`))
              .addTo(map);



            let userPlaces = {
              type: "FeatureCollection",
              features: [
                {
                  "type": "Feature",
                  "geometry": {
                    "type": "Point",
                    "coordinates": [
                      place.place.lat,
                      place.place.lng
                    ]
                  }
                }]
            };

          }

        })

*/
      })
    

  });

</script>